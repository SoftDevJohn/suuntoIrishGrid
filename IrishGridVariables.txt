All following variables are 0.
e
m
*n
k
r
pi
*deg2rad
*lambda
lambda0
y0
q
w
b
b0
dl
d
rdy
tsin
*phi

latRad
lonRad
a
b
tx
ty
ry
rz
s1
lat0
lon0
N0
E0

N0
sinPhi
sinLambda
H
eSq
nu
x1
y1
z1
x2
y2
z2
precision
p
cosLat
rho
eta2
Ma
Mb
Mc
cos3lat
cos5lat
tan2lat
tan4lat
I
II
III
IV
V
VI
dLon
dLon2
N
E
digits
es
ns
============= Code fr/* While in sport mode do this once per second */
/* 
  Convert Lat/Long values to RD values
  "RijksDriehoeksmeting"-coordinates
  For the X and the Y coordinate there are separate apps
  This one is for the RD-Y coordinate
  INPUT: SUUNTO_GPS_LATITUDE, SUUNTO_GPS_LONGITUDE
  RESULT: RDY
  Voorbeeld: N 51.6439 / E 4.4376 => 89273 / 404546
*/
e = 0.081696831222;    /* excentricity of bessel ellips */
m = 0.003773953832;    /* correction factors for gauss projection */
n = 1.00047585668;   
k = 0.9999079;         /* scaling factor for projection */
r = 6382644.571;
pi= 3.141592653589793;
deg2rad = pi/180;
lambda0 = 5.387638889 * deg2rad;
y0 = 463000.0;

/* Input, convert from decimal to radians*/
phi=SUUNTO_GPS_LATITUDE * deg2rad;
lambda=SUUNTO_GPS_LONGITUDE * deg2rad;

tsin = Suunto.sin(phi);
q = 0.5*Suunto.log((1+tsin)/(1-tsin)) - (e * 0.5*Suunto.log((1+(e*tsin))/(1-(e*tsin))));
w = n * q + m;
b = 2*Suunto.atan2(Suunto.exp(w),1) - pi/2;  
b0= 52.121097249 * deg2rad;

dl = n * (lambda - lambda0);
/* Finally, calculate the RD x and y components */
d = 1 + Suunto.sin(b) * Suunto.sin(b0) + Suunto.cos(b) * Suunto.cos(b0) * Suunto.cos(dl);
rdy = 2 * k * r * ((Suunto.sin(b) * Suunto.cos(b0) - Suunto.cos(b) * Suunto.sin(b0) * Suunto.cos(dl)) / d) + y0;
RESULT=rdy;
    om copied app